<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.web.bi.mapper.ChartMapper">

    <resultMap id="BaseResultMap" type="io.web.bi.model.entity.Chart">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="goal" column="goal" jdbcType="VARCHAR"/>
            <result property="chartData" column="chartData" jdbcType="VARCHAR"/>
            <result property="chartType" column="chartType" jdbcType="VARCHAR"/>
            <result property="genChart" column="genChart" jdbcType="VARCHAR"/>
            <result property="genResult" column="genResult" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="VARCHAR"/>
            <result property="execMessage" column="execMessage" jdbcType="VARCHAR"/>
            <result property="userId" column="userId" jdbcType="BIGINT"/>
            <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
            <result property="isDelete" column="isDelete" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,`name`,goal,
        chartData,chartType,genChart,
        genResult,status,execMessage,
        userId,createTime,updateTime,
        isDelete
    </sql>

    <sql id="createTableColumns">
        <foreach collection="columns" item="column" separator=",">
            ${column} null
        </foreach>
    </sql>
    <select id="createTable" >
        CREATE TABLE  IF NOT EXISTS ${tableName} (
        <include refid="createTableColumns"/>
        )
    </select>
    <select id="selectBySingleTableName" resultType="io.web.bi.model.entity.Chart" >
        select chartData from chart where id = #{id}
    </select>
    <select id="selectEntireByTableName" resultType="io.web.bi.model.entity.Chart">
        select chartData from chart where id = #{id}
    </select>

    <insert id="insertTableData">
        insert into ${tableName} values
        <foreach collection="tableData" item="rowData" separator=",">
            (${rowData})
        </foreach>
    </insert>
</mapper>
